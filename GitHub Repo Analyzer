import requests
from textblob import TextBlob

def fetch_repositories(topic, language='python', sort_by='stars', descending=True, max_results=10):
    url = 'https://api.github.com/search/repositories'
    params = {
        'q': f'topic:{topic} language:{language}',
        'sort': sort_by,
        'order': 'desc' if descending else 'asc',
        'per_page': max_results
    }
    response = requests.get(url, params=params)
    if response.status_code == 200:
        repositories = response.json()['items']
        return repositories
    else:
        print("Failed to fetch repositories.")
        return []

def analyze_sentiment(text):
    analysis = TextBlob(text)
    return analysis.sentiment.polarity

def main():
    topic = input("Enter a topic of interest: ")
    repositories = fetch_repositories(topic)

    if repositories:
        print(f"Top {len(repositories)} repositories related to '{topic}':\n")
        for repo in repositories:
            sentiment_score = analyze_sentiment(repo['description'])
            if sentiment_score > 0:
                sentiment_label = "Positive"
            elif sentiment_score < 0:
                sentiment_label = "Negative"
            else:
                sentiment_label = "Neutral"
            print(f"Name: {repo['name']}")
            print(f"Description: {repo['description']}")
            print(f"Stars: {repo['stargazers_count']} | Forks: {repo['forks_count']} | Language: {repo['language']}")
            print(f"Sentiment: {sentiment_label} (Score: {sentiment_score})\n")
    else:
        print("No repositories found for the specified topic.")

if __name__ == "__main__":
    main()
